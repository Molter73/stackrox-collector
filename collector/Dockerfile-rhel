FROM centos:7

# Install our dependencies
RUN yum update -y \
    && yum groupinstall -y "Development Tools" \
    && yum install -y kernel-devel-$(uname -r) \
    && yum install -y wget \
    && wget http://rpms.famillecollet.com/enterprise/7/remi/x86_64/remi-release-7.2-1.el7.remi.noarch.rpm \
    && wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm \
    && wget http://dl.fedoraproject.org/pub/archive/fedora/linux/updates/19/x86_64/curl-7.29.0-27.fc19.x86_64.rpm \
    && rpm -ivh epel-release-7-9.noarch.rpm \
    && rpm -Uvh remi-release*rpm \
    && yum --enablerepo=remi install -y cmake3 \
    && ln -s /usr/bin/cmake3 /usr/bin/cmake \
    && yum install -y gmock \
    && yum install -y *.fc19.x86_64.rpm \
       jsoncpp-devel \
       openssl-devel --skip-broken \
       autoconf \
       automake \
       libtool \
       unzip \
       ;

# We want to fail if the destination directory is there, hence mkdir (not -p).
RUN mkdir build

# GoogleMock (and GoogleTest) are opinionated about how to install the library
RUN cd ~ \
    && git clone https://github.com/google/googletest.git \
    && cd googletest \
    && cmake CmakeLists.txt \
    && make \
    && mkdir -p /usr/include/gmock/ \
    && cp -rf ~/googletest/googlemock/include/gmock/* /usr/include/gmock/ \
    && mkdir -p  /usr/include/gtest \
    && cp -rf ~/googletest/googletest/include/gtest/* /usr/include/gtest \
    && cp googlemock/libgmock*.a /usr/lib \
    && cp googlemock/gtest/libgtest*.a /usr/lib \
     ;

# prometheus-cpp
COPY build/install_prometheus.sh build/install_prometheus.sh
RUN build/install_prometheus.sh

# cURL 7.42 or higher is required for UNIX socket access
ARG CURL_REVISION=curl-7_49_1
COPY build/install_libcurl.sh build/install_libcurl.sh
RUN build/install_libcurl.sh

# librdkafka v0.9.0 introduced a consistent hash message partitioner.
ARG RDKAFKA_REVISION=v0.9.3
COPY build/install_rdkafka.sh build/install_rdkafka.sh
RUN build/install_rdkafka.sh

# Clean up the build directory we created.
RUN rm -rf tmp-build

# Prepare everything, build, and run tests
RUN mkdir -p /src/build
COPY container/libs/libsysdignative.so /usr/local/lib/libsysdignative.so
COPY . /src
WORKDIR /src/build
CMD rm -f CMakeCache.txt && cmake .. && make clean all && ./runUnitTests
